stages:
- name: Build Stage
  inputs:
  - type: git
    branch: main
    service: ${GIT_REPO}
  triggers:
  - type: commit
  jobs:
  - name: Build
    type: builder
- name: Deploy Stage
  inputs:
  - type: job
    stage: Build Stage
    job: Build
  triggers:
  - type: stage
  properties:
  - name: ICF_NAMESPACE
    value: ${ICF_NAMESPACE}
    type: text
  - name: ICF_NAMESPACE_ID
    value: ${ICF_NAMESPACE_ID}
    type: text
  - name: POULTRY_SENSE_HOST
    value: ${POULTRY_SENSE_HOST}
    type: text
  - name: POULTRY_SENSE_USERNAME
    value: ${POULTRY_SENSE_USERNAME}
    type: text
  - name: POULTRY_SENSE_PASSWORD
    value: ${POULTRY_SENSE_PASSWORD}
    type: secure
  - name: BTS_HOST
    value: ${BTS_HOST}
    type: text
  - name: BTS_ORG_ID
    value: ${BTS_ORG_ID}
    type: text
  - name: BTS_ORG_PREFIX
    value: ${BTS_ORG_PREFIX}
    type: text
  - name: BTS_ORG_HQ_GLN
    value: ${BTS_ORG_HQ_GLN}
    type: text
  - name: BTS_API_KEY
    value: ${BTS_API_KEY}
    type: secure
  jobs:
  - name: Deploy
    type: deployer
    deploy_type: cf
    artifact_dir: ''
    build_type: shell
    target:
      region_id: ${REGION_ID}
      organization: ${ORGANIZATION}
      space: ${SPACE}
      application: ${APP}
      api_key: ${API_KEY}
    script: |-
      #!/bin/bash
      #set -o xtrace
      ibmcloud login -a ${CF_TARGET_URL} --apikey ${PIPELINE_BLUEMIX_API_KEY}
      ibmcloud target --cf -o ${CF_ORG} -s ${CF_SPACE}

      ################################################################
      # Install dependencies
      ################################################################
      echo 'Installing dependencies...'
      sudo apt-get -qq update 1>/dev/null
      sudo apt-get -qq install jq 1>/dev/null
      sudo apt-get -qq install figlet 1>/dev/null

      ################################################################
      # Fetch auth credentials
      ################################################################

      figlet 'IBM Cloud'

      echo 'Retrieving Cloud Functions authorization key...'

      ibmcloud fn api list

      ################################################################
      # Deploy 
      ################################################################

      figlet 'Deploy'

      echo "Running deploy..."
      ibmcloud fn deploy

- name: Health Stage
  inputs:
  - type: job
    stage: Build Stage
    job: Build
  triggers:
  - type: stage
  permission:
    execute: TOOLCHAIN_ADMINS
  jobs:
  - name: Test
    type: deployer
    artifact_dir: ''
    build_type: shell
    target:
      region_id: ${REGION_ID}
      organization: ${ORGANIZATION}
      space: ${SPACE}
      application: ${APP}
      api_key: ${API_KEY}
    script: |-
      #!/bin/sh
      ibmcloud login -a ${CF_TARGET_URL} --apikey ${PIPELINE_BLUEMIX_API_KEY}
      ibmcloud target --cf -o ${CF_ORG} -s ${CF_SPACE}
      if [ "$(ibmcloud fn action invoke CloudFunctionsNodejs/readAll | grep ok:)" != "" ]; then
        echo "Successfully reached health endpoint."
      else
        echo "Could not reach the health endpoint."
        exit 1
      fi
    test_type: customimage
    docker_image: alpine
hooks:
- enabled: true
  label: null
  ssl_enabled: false
  url: http://lms-api/v1/messaging/webhook/publish
